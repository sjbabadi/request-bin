{"version":3,"sources":["services/bins.js","components/Home.js","components/Request.js","components/Bin.js","components/Header.js","App.js","index.js"],"names":["bins","get","slug","axios","then","response","data","catch","err","console","log","create","post","uri","Home","history","useHistory","useState","disabled","setDisabled","className","onClick","e","preventDefault","push","Request","headers","JSON","parse","method","timestamp","body","queryParams","query_params","isJson","nestedClass","Object","keys","map","key","style","whiteSpace","stringify","String","Bin","tub","setTub","requestURL","useEffect","socket","socketIOClient","emit","on","requests","disconnect","result","id","text","request","Header","to","App","match","useRouteMatch","params","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eddc503.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst get = (slug) => {\n  const request = axios.get(`/data/${slug}`)\n  return request.then(response => {\n    return response.data\n  }).catch(err => {\n    console.log(err)\n  })\n}\n\nconst create = () => {\n  const request = axios.post(`/tubs`)\n  return request.then(response => response.data.uri)\n}\n\nconst bins = {\n  get,\n  create\n}\n\nexport default bins","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport bins from '../services/bins'\n\nconst Home = () => {\n  const history = useHistory();\n  const [disabled, setDisabled] = useState(false);\n  \n  const createBin = (e) => {\n    e.preventDefault();\n    setDisabled(true);\n    bins.create().then(uri => { \n      history.push(`/tub/${uri}`);\n    });\n  }\n\n  return (\n    <div className=\"pt-10 text-xl flex flex-col items-center \">\n      <p className=\"inline-block font-bold text-2xl\">Welcome!</p>\n      <p className=\"mt-8 inline-block \">Request Tub is a place where you can send your API calls or webhooks to gain valuable insight on their structure.</p>\n      <p className=\"mt-8 inline-block \">Tubs are ephemeral and disappear after 48 hours, and hold only the latest 20 requests.</p>\n      <p className=\"mt-8 inline-block \">Click \"Create Tub\" to get started!</p>\n      <button disabled={disabled} className=\"mt-8 bg-blue-500 hover:bg-blue-700 disabled:bg-gray-300 disabled:border-gray-500 text-white font-bold py-2 px-4 border border-blue-700 rounded\" onClick={createBin}>Create Tub</button>\n    </div>\n  )\n};\n\nexport default Home;","\n/*\n[URI] => {\n    \"Requests\": [\n      {\n        \"timestamp\": \"\",\n        \"method\": \"\",\n        \"query_params\": [\n          \"\": \"\" , (...)\n        ],\n        \"headers\": [\n          \"\" : \"\", (...)\n        ],\n        \"body\": \"\"\n      }, (...)\n    ]\n  }\n*/\nconst Request = ({ data }) => {\n  data = JSON.parse(data);\n  const headers = data.headers;\n  const method = data.method;\n  const timestamp = data.timestamp;\n  const body = data.body;\n  const queryParams = data.query_params;\n  const isJson = !!headers['content-type'] && headers['content-type']  === 'application/json'\n  const nestedClass = \"ml-8 text-xs truncate\"\n  return (\n    <div className=\"p-3 mt-3 w-11/12 bg-indigo-200 border-2 border-indigo-400 rounded inline-block\">\n    <ul>\n      <li>timestamp: <code>{timestamp}<br /></code></li>\n      <li>method: <code>{method}</code> <br /></li>\n      <li>\n        headers: <br />\n        <code>\n          <ul>\n            {Object.keys(headers).map(key => \n              <li className={nestedClass} key={key}> {key}: {headers[key]}<br/> </li>\n            )}\n          </ul>\n        </code>\n      </li>\n\n      <li>\n        query parameters: <br />\n        <code>\n          <ul>\n            {Object.keys(queryParams).map(key => \n              <li className={nestedClass} key={key}>{key}: {queryParams[key]}</li>\n            )}\n          </ul>\n        </code>\n      </li>\n      <li>\n        body: {isJson ? <code style={{whiteSpace: 'pre'}}>{JSON.stringify(body, null, 2)}</code> : String(body) }\n      </li>\n    </ul>\n  </div>\n  );\n}\n\nexport default Request;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport bins from '../services/bins'\nimport Request from './Request'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"/\"\n\nconst Bin = ({ slug }) => {\n  const [tub, setTub] = useState(null)\n\n  const history = useHistory()\n  const requestURL = `www.reqbin.sjbabadi.com/${slug}`\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.emit(\"NewClient\", slug);\n    socket.on('UpdateTub', ({ requests }) => {\n      setTub(requests)\n    })\n    return () => socket.disconnect();\n  }, [slug]);\n\n  useEffect(() => {\n    bins.get(slug).then(result => {\n      if (result) {\n        let requests = result.requests;\n        setTub(requests)\n      } else {\n        // TODO: render 404 page instead\n        history.push('/')\n      }\n    })\n  }, [history, slug])\n\n  return (\n    <main>\n      <h3 className=\"mt-8 text-center text-2xl\">Tub API URL:</h3>\n      <h4 className=\"mt-2 text-center text-2xl mb-1.5\"><code id=\"requestURL\" className=\"bg-gray-300 border-2 border-gray-400 hover:bg-gray-400 hover:border-gray-500 p-2 rounded\">{requestURL}</code></h4>\n      <CopyToClipboard text={requestURL}>\n        <button className=\"block mt-4 mx-auto bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 border border-purple-700 rounded\">Copy URL</button>\n      </CopyToClipboard>\n      <div className=\"flex flex-col items-center\">\n        {tub &&\n          tub.map(request =>\n            <Request key={request.timestamp} data={JSON.stringify(request)} />\n          )\n        }\n      </div>\n    </main>\n  )\n}\n\nexport default Bin;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n\n  return ( \n    <h1 className=\" bg-purple-200 text-purple-900 text-center border-black font-bold p-6 text-5xl\">\n      <Link to='/' className=\"hover:text-indigo-500\">Request Tub</Link>\n    </h1>\n  )\n}\n\nexport default Header","import {\n  Switch, Route,\n  useRouteMatch\n} from 'react-router-dom'\nimport Home from './components/Home'\nimport Bin from './components/Bin'\nimport Header from './components/Header'\n\n/*\n  Bin:\n    Requests (list, sort by timestamp)\n      URI\n      timestamp\n      Headers (list, collapseable)\n      Parameters (list, collapseable)\n      Body\n        switch on encoding type?\n*/\n// const json = {\n//   timestamp: new Date().toString(),\n//   method: \"POST\",\n//   query_params: {\n//     amount: \"400\",\n//     length: \"60\",\n//     width: \"30\",\n//   },\n//   headers: {\n//     header1: \"value1\",\n//     header2: \"value2\",\n//   },\n//   body: '{\"Hi\":\"I\\'m json\"}'\n// }\nconst  App = () => {\n  const match = useRouteMatch('/tub/:slug')\n  const slug = match?.params?.slug\n  return (\n    //<Request data={json} />\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/tub/:slug\">\n          <Bin slug={slug}/>\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}